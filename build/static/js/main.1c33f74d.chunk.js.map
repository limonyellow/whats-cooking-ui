{"version":3,"sources":["styles/fonts/Montserrat-Regular.ttf","components/navbar.jsx","components/search_result.jsx","components/search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","SearchResult","props","data","score","num_of_items","total_items_appearances","src","image_url","url","target","title","Search","useState","searchText","setSearchText","resultData","setResultData","handleSubmit","event","a","preventDefault","console","log","response","axios","get","params","q","sourceid","error","map","list","onSubmit","type","placeholder","onChange","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"+OAAAA,EAAOC,QAAU,IAA0B,gD,8FC8C5BC,MA3Cf,WACE,OACE,yBAAKC,UAAU,iBACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,kBAIA,wBAAID,UAAU,eACZ,wBAAIA,UAAU,oBACZ,uBAAGC,KAAK,UAAR,WAEF,wBAAID,UAAU,oBACZ,uBAAGC,KAAK,MAAR,iB,8DCgBKC,MA5Bf,SAAsBC,GACpB,OACE,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,SAAf,UAA+BG,EAAMC,KAAKC,OAC1C,yBAAKL,UAAU,aAAf,gBAAyCG,EAAMC,KAAKE,cACpD,yBAAKN,UAAU,eAAf,SACSG,EAAMC,KAAKG,0BAGtB,yBAAKP,UAAU,sBACb,6BACE,yBAAKA,UAAU,oBAAoBQ,IAAKL,EAAMC,KAAKK,aAErD,6BACE,uBACET,UAAU,qBACVC,KAAME,EAAMC,KAAKM,IACjBC,OAAO,UAEP,yBAAKX,UAAU,uBAAuBG,EAAMC,KAAKQ,OACjD,yBAAKZ,UAAU,sBAAsBG,EAAMC,KAAKM,UCqE7CG,MAxFf,WAAmB,IAAD,EACoBC,mBAAS,IAD7B,mBACTC,EADS,KACGC,EADH,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,KAIVC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAME,iBACNC,QAAQC,IAAIT,GACRU,EAAW,GAHI,kBAKAC,IAAMC,IAAI,UAAW,CACpCC,OAAQ,CACNC,EAAGd,EACHe,SAAU,KARG,OAKjBL,EALiB,uDAYjBF,QAAQQ,MAAR,MAZiB,QAcnBR,QAAQC,IAAI,YAAaC,GACzBF,QAAQC,IAAI,iBAAkBC,EAASrB,MACvCqB,EAASrB,KAAK4B,KAAI,SAACC,GAAD,OAAUV,QAAQC,IAAIS,EAAKrB,UAC7CM,EAAcO,EAASrB,MAjBJ,yDAAH,sDAmBlB,OACE,yBAAKJ,UAAU,eACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBAAf,qBACA,yBAAKA,UAAU,cACb,0BAAMkC,SAAUf,GACd,2BACEgB,KAAK,OACLnC,UAAU,aACVoC,YAAY,YACZC,SAAU,SAACjB,GACTJ,EAAcI,EAAMT,OAAO2B,YAKnC,yBAAKtC,UAAU,kBACZiB,EAAWe,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAAc7B,KAAM6B,UC7BfM,MAZf,WACE,OACE,yBAAKvC,UAAU,OACb,yBAAKA,UAAU,cAAcD,KAC7B,0BAAMC,UAAU,YAAYa,KAC5B,4BAAQb,UAAU,cAChB,oDAA0B,WCCdwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzB,GACLR,QAAQQ,MAAMA,EAAM0B,c","file":"static/js/main.1c33f74d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Montserrat-Regular.ee653992.ttf\";","import React from \"react\";\r\nimport \"../styles/navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar-header\">\r\n      <a className=\"navbar-title\" href=\"/\">\r\n        Whats Cooking?\r\n      </a>\r\n\r\n      <ul className=\"navbar-menu\">\r\n        <li className=\"navbar-menu-item\">\r\n          <a href=\"search\">Search</a>\r\n        </li>\r\n        <li className=\"navbar-menu-item\">\r\n          <a href=\"db\">Data Base</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    // <React.Fragment>\r\n    //   <div className=\"navbar-header\">\r\n    //     <a className=\"navbar-title\" href=\"/\">\r\n    //       Shagger\r\n    //     </a>\r\n    //   </div>\r\n    //   <div className=\"navbar-bottom\">\r\n    //     <ul className=\"navbar-bottom-menu\">\r\n    //       <li className=\"navbar-bottom-menu-item\">\r\n    //         <a href=\"#home\">Home</a>\r\n    //       </li>\r\n    //       <li className=\"navbar-bottom-menu-item\">\r\n    //         <a href=\"#news\">News</a>\r\n    //       </li>\r\n    //       <li className=\"navbar-bottom-menu-item\">\r\n    //         <a href=\"#contact\">Contact</a>\r\n    //       </li>\r\n    //       <li className=\"navbar-bottom-menu-item\">\r\n    //         <a href=\"#about\">About</a>\r\n    //       </li>\r\n    //     </ul>\r\n    //   </div>\r\n    // </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../styles/search_result.css\";\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <div className=\"search-result\">\r\n      <div className=\"search-result-top\">\r\n        <div className=\"score\">Score: {props.data.score}</div>\r\n        <div className=\"items-num\">Items found: {props.data.num_of_items}</div>\r\n        <div className=\"appearances\">\r\n          Hits: {props.data.total_items_appearances}\r\n        </div>\r\n      </div>\r\n      <div className=\"search-result-main\">\r\n        <div>\r\n          <img className=\"search-result-img\" src={props.data.image_url} />\r\n        </div>\r\n        <div>\r\n          <a\r\n            className=\"search-result-link\"\r\n            href={props.data.url}\r\n            target=\"_blank\"\r\n          >\r\n            <div className=\"search-result-title\">{props.data.title}</div>\r\n            <div className=\"search-result-link\">{props.data.url}</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchResult;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/search.css\";\r\nimport axios from \"axios\";\r\nimport SearchResult from \"./search_result\";\r\n\r\nfunction Search() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [resultData, setResultData] = useState([]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(searchText);\r\n    let response = \"\";\r\n    try {\r\n      response = await axios.get(\"/search\", {\r\n        params: {\r\n          q: searchText,\r\n          sourceid: 1,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    console.log(\"response:\", response);\r\n    console.log(\"response.data:\", response.data);\r\n    response.data.map((list) => console.log(list.title));\r\n    setResultData(response.data);\r\n  };\r\n  return (\r\n    <div className=\"search-main\">\r\n      <div className=\"search-menu\"></div>\r\n      <div className=\"search-title\">What do you have?</div>\r\n      <div className=\"search-box\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search...\"\r\n            onChange={(event) => {\r\n              setSearchText(event.target.value);\r\n            }}\r\n          ></input>\r\n        </form>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        {resultData.map((list) => (\r\n          <SearchResult data={list} />\r\n        ))}\r\n        {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam massa\r\n        felis, pellentesque nec fermentum fringilla, ornare vitae libero. Mauris\r\n        vel urna ligula. Donec vitae iaculis ex. Pellentesque egestas iaculis\r\n        rhoncus. Aliquam bibendum, justo et consequat fringilla, velit nibh\r\n        dictum lorem, non ultricies arcu tellus eu ante. Suspendisse a porta\r\n        nibh, vitae ultrices ligula. Integer vel nulla quis nulla interdum\r\n        ornare ut sed arcu. Sed eget interdum dolor. Maecenas at lobortis massa.\r\n        In a suscipit mauris, nec posuere magna. In sed molestie ex. Quisque\r\n        sodales tortor eget tincidunt accumsan. Integer vehicula feugiat arcu.\r\n        Morbi massa ante, efficitur at lacus ac, hendrerit viverra arcu. Etiam\r\n        eu lorem congue, pretium quam a, euismod ante. Nam ultrices tincidunt\r\n        pulvinar. Nullam et blandit urna, non lobortis lacus. Sed tempus, magna\r\n        sit amet convallis sollicitudin, lacus dolor laoreet diam, interdum\r\n        posuere nisi nisi vitae augue. Orci varius natoque penatibus et magnis\r\n        dis parturient montes, nascetur ridiculus mus. Nullam at urna fermentum\r\n        elit lacinia dignissim. Sed at mi eu ligula fermentum ultricies. Quisque\r\n        ut dapibus ligula. Pellentesque tincidunt leo eget ipsum bibendum\r\n        vehicula. Vestibulum non ex ac enim ultricies molestie. Maecenas\r\n        tristique mollis placerat. Etiam nec eros leo. Sed convallis purus\r\n        massa, et suscipit dolor molestie vulputate. Morbi scelerisque libero\r\n        vel nunc consectetur, a faucibus eros tempus. Curabitur aliquet sed\r\n        metus id faucibus. Vivamus non dignissim lectus. Nam laoreet urna nulla,\r\n        a maximus dolor tincidunt sit amet. Praesent felis turpis, accumsan id\r\n        sollicitudin iaculis, cursus eu ligula. Sed quis semper orci, et\r\n        bibendum ante. Nullam id risus ut massa posuere eleifend vel nec sem.\r\n        Vivamus tincidunt, justo eget interdum tempus, risus ligula rutrum\r\n        lorem, in pharetra risus lacus nec est. Donec id rutrum lectus. Nullam\r\n        sagittis mattis convallis. Vivamus in interdum augue, eget gravida\r\n        ipsum. Vivamus ullamcorper, libero eu ornare luctus, leo libero luctus\r\n        ex, sed vehicula est felis id velit. dd dd asdlghsdjakgh asjdgljs\r\n        asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdagdd dd asdlghsdjakgh\r\n        asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdag dd dd\r\n        asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs\r\n        asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh\r\n        asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdag dd dd\r\n        asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs\r\n        asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh\r\n        asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdagdd dd\r\n        asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh asjdgljs\r\n        asdgjklsdag dd dd asdlghsdjakgh asjdgljs asdgjklsdag dd dd asdlghsdjakgh\r\n        asjdgljs asdgjklsdag */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/navbar\";\nimport Search from \"./components/search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"App-navbar\">{Navbar()}</nav>\n      <body className=\"App-main\">{Search()}</body>\n      <footer className=\"App-fotter\">\n        <label>Powered by KARNAF {\"\\u00A9\"}</label>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles/fonts/Montserrat-Regular.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}